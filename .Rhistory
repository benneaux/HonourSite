library(astsa)
library(knitr)
library(ggplot2)
library(tidyverse)
library(forecast)
opts_chunk$set(collapse = TRUE, fig.align="center")
opts_chunk$set(cache = TRUE, echo = FALSE)
fludata <- read.csv("Project/Data/fludata3.csv", header=TRUE)
UnVacc <- fludata$ILI_Unvaccinated
pr.iUnVacc <- which.min(UnVacc); UnVacc[pr.iUnVacc]
UnVacc[pr.iUnVacc] <- {UnVacc[pr.iUnVacc-3] + 2*UnVacc[pr.iUnVacc-2] + 3*UnVacc[pr.iUnVacc-1] + 3*UnVacc[pr.iUnVacc+1] + 2*UnVacc[pr.iUnVacc+2] + UnVacc[pr.iUnVacc+3]}/12
Vaxx <- fludata$ILI_Vaccinated
pr.iVaxx <- which.min(Vaxx)
Vaxx[pr.iVaxx] <- {Vaxx[pr.iVaxx-3] + 2*Vaxx[pr.iVaxx-2] + 3*Vaxx[pr.iVaxx-1] + 3*Vaxx[pr.iVaxx+1] + 2*Vaxx[pr.iVaxx+2] + Vaxx[pr.iVaxx+3]}/12
# ccf(UnVacc,Vaxx,na.action=na.omit, lag.max = 25)
library(astsa)
library(knitr)
library(ggplot2)
library(tidyverse)
library(forecast)
opts_chunk$set(collapse = TRUE, fig.align="center")
opts_chunk$set(cache = TRUE, echo = FALSE)
fludata <- read.csv("Project/Data/fludata3.csv", header=TRUE)
UnVacc <- fludata$ILI_Unvaccinated
pr.iUnVacc <- which.min(UnVacc); UnVacc[pr.iUnVacc]
UnVacc[pr.iUnVacc] <- {UnVacc[pr.iUnVacc-3] + 2*UnVacc[pr.iUnVacc-2] + 3*UnVacc[pr.iUnVacc-1] + 3*UnVacc[pr.iUnVacc+1] + 2*UnVacc[pr.iUnVacc+2] + UnVacc[pr.iUnVacc+3]}/12
Vaxx <- fludata$ILI_Vaccinated
pr.iVaxx <- which.min(Vaxx)
Vaxx[pr.iVaxx] <- {Vaxx[pr.iVaxx-3] + 2*Vaxx[pr.iVaxx-2] + 3*Vaxx[pr.iVaxx-1] + 3*Vaxx[pr.iVaxx+1] + 2*Vaxx[pr.iVaxx+2] + Vaxx[pr.iVaxx+3]}/12
# ccf(UnVacc,Vaxx,na.action=na.omit, lag.max = 25)
# plot.ts(UnVacc) #UnVaccinated
# plot.ts(Vaxx) #Vaxxinated
# Vaxx.acf <- acf2(Vaxx, length(Vaxx)-1)
# sarima(Vaxx,3,0,0)
fit <- arima(Vaxx,c(3,0,0))
fit$coef
pwUnVacc <- stats::filter(UnVacc, filter = c(1,-fit$coef[1],-fit$coef[3]), sides = 1)
resVaxx <- fit$residuals
# ccf(resVaxx,pwUnVacc,na.action=na.omit, lag.max = 25)
library(astsa)
library(knitr)
library(ggplot2)
library(tidyverse)
library(forecast)
opts_chunk$set(collapse = TRUE, fig.align="center")
opts_chunk$set(cache = TRUE, echo = FALSE)
fludata <- read.csv("Project/Data/fludata3.csv", header=TRUE)
UnVacc <- fludata$ILI_Unvaccinated
pr.iUnVacc <- which.min(UnVacc); UnVacc[pr.iUnVacc]
UnVacc[pr.iUnVacc] <- {UnVacc[pr.iUnVacc-3] + 2*UnVacc[pr.iUnVacc-2] + 3*UnVacc[pr.iUnVacc-1] + 3*UnVacc[pr.iUnVacc+1] + 2*UnVacc[pr.iUnVacc+2] + UnVacc[pr.iUnVacc+3]}/12
Vaxx <- fludata$ILI_Vaccinated
pr.iVaxx <- which.min(Vaxx)
Vaxx[pr.iVaxx] <- {Vaxx[pr.iVaxx-3] + 2*Vaxx[pr.iVaxx-2] + 3*Vaxx[pr.iVaxx-1] + 3*Vaxx[pr.iVaxx+1] + 2*Vaxx[pr.iVaxx+2] + Vaxx[pr.iVaxx+3]}/12
# ccf(UnVacc,Vaxx,na.action=na.omit, lag.max = 25)
# plot.ts(UnVacc) #UnVaccinated
# plot.ts(Vaxx) #Vaxxinated
# Vaxx.acf <- acf2(Vaxx, length(Vaxx)-1)
# sarima(Vaxx,3,0,0)
fit <- arima(Vaxx,c(3,0,0))
fit$coef
pwUnVacc <- stats::filter(UnVacc, filter = c(1,-fit$coef[1],-fit$coef[3]), sides = 1)
resVaxx <- fit$residuals
# ccf(resVaxx,pwUnVacc,na.action=na.omit, lag.max = 25)
Vaxx <- ts(Vaxx,start = 1, end = 115)
zVaxx <- ts.intersect(Vaxx, stats::lag(Vaxx, -1), stats::lag(Vaxx, -4))
plot(zVaxx)
fit2 <- arima(UnVacc[5:115],c(2,0,0), xreg = cbind(zVaxx[,2],zVaxx[,3]))
fit2
UnVacc <- ts(UnVacc, start = 1, end = 115)
zUnVacc <-  ts.intersect(UnVacc, stats::lag(UnVacc, -1), stats::lag(UnVacc, -2))
plot(zUnVacc)
fit3 <- lm(zUnVacc[3:113,1] ~ zUnVacc[3:113,2] + zUnVacc[3:113,3] + zVaxx[,2] + 0)
fcastfit3 <- forecast(fit3, h = 23)
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06)) # Label title and axes
n.samp <- 23
end.ind <- length(UnVacc) - n.samp
fit3 <- lm(zUnVacc[3:end.ind,1] ~ zUnVacc[3:end.ind,2] + zUnVacc[3:end.ind,3] + zVaxx[3:end.ind,2])
predicted <- tbl_df(predict(fit3, newdata = data.frame(x = n.samp), se.fit = TRUE))
rel.error <- abs(UnVacc[(end.ind + 1):115]-predicted$fit)/UnVacc[(end.ind + 1):115]
rel.error2 <- data.frame(data=cbind(UnVacc[(end.ind + 1):115], predicted$fit, rel.error))
colnames(rel.error2) <- c("Actual", "Predicted", "Relative error")
rel.error3 <- rel.error2 %>%
mutate(ID = 1:n()) %>%
select(-`Relative error`) %>%
gather(key = series, value = values, `Actual`, `Predicted`,-ID)
ggplot(data = rel.error3, aes(x = ID, y = values, group = series, colour = series)) +
geom_path() +
coord_cartesian(ylim = c(0,0.1))
fit3 <- lm(zUnVacc[3:113,1] ~ zUnVacc[3:113,2] + zUnVacc[3:113,3] + zVaxx[,2] + 0)
fcastfit3 <- forecast(fit3, h = 23)
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06)) # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
length(c((end.ind +1):115))
length(as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
lines(as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
test <- predict(fit3, new, interval = "prediction")
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[,c(end.ind + 1):115])
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,115)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,111)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115],)
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115,])
as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115]
as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):111]
as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):111]
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,111)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):111])
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,111)) + # Label title and axes
lines(c((end.ind + 1):115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red")[c(end.ind + 1):115])
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,111)) + # Label title and axes
lines(c((0:115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
#lines(c((end.ind + 1):115), as.numeric(predict(fit3, n.samp)-2*predict(fit3, n.samp)$se), col="red", lty="dashed")
#lines(c((end.ind + 1):115), as.numeric(predict(fit.uv, n.samp)$pred+2*predict(fit.uv, n.samp)$se), col="red", lty="dashed")
#legend("topright", legend=c("Actual", "Predicted (+/- 2SE)"), lty=1, col=1:2, bty="n")
test <- predict(fit3, new, interval = "prediction")
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,111)) + # Label title and axes
lines(c(0:115), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,111)) + # Label title and axes
lines(c(0:111), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
plot.ts(UnVacc[1:end.ind], ylim=c(0, 0.06), xlim=c(0,111)) + # Label title and axes
lines(c(1:111), as.numeric(predict(fit3,newdata = data.frame(x = n.samp)), col="red"))
library(rmarkdown)
?render
render("HonoursMeeting.Rmd",output_format = "md_document", output_dir = "../_posts", output_file = "2017-09-22-TestOutput.md")
getwd()
render("R/HonoursMeeting.Rmd",output_format = "md_document", output_dir = "_posts/", output_file = "2017-09-22-TestOutput.md")
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
#suppress the warnings and other messages from showing in the knitted file.
knitr::opts_chunk$set(fig.width=8, fig.height=6, fig.path="_images/",
echo=TRUE, warning=FALSE, message=FALSE)
#suppress the warnings and other messages from showing in the knitted file.
knitr::opts_chunk$set(fig.width=8, fig.height=6, fig.path="../_images/",
echo=TRUE, warning=FALSE, message=FALSE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
source('~/Documents/HonourSite/R/renderfiles.R', echo=TRUE)
